From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: fgei <fgei@gmail.com>
Date: Thu, 7 Dec 2023 08:29:57 +0000
Subject: [PATCH] Use ruleset from config apk whenever it's present

Adapted from GrapheneOS Vanadium patch 0148-Use-ruleset-from-config-apk-whenever-it-s-present.patch for the Vandium browser port.

---
 .../android/subresource_filter_android.gni            |  3 +++
 .../content/shared/browser/ruleset_service.cc         | 11 +++++++++++
 2 files changed, 14 insertions(+)

diff --git a/components/subresource_filter/content/shared/browser/ruleset_service.cc b/components/subresource_filter/content/shared/browser/ruleset_service.cc
index 0cc96e45d7ad2..54990fb8218da 100644
--- a/components/subresource_filter/content/shared/browser/ruleset_service.cc
+++ b/components/subresource_filter/content/shared/browser/ruleset_service.cc
@@ -27,6 +27,9 @@
 #include "base/trace_event/traced_value.h"
 #include "components/prefs/pref_registry_simple.h"
 #include "components/prefs/pref_service.h"
+#if BUILDFLAG(IS_ANDROID)
+#include "components/subresource_filter/android_config/subresource_filter_fetching.h"
+#endif // BUILDFLAG(IS_ANDROID)
 #include "components/subresource_filter/content/shared/browser/ruleset_publisher.h"
 #include "components/subresource_filter/content/shared/browser/unindexed_ruleset_stream_generator.h"
 #include "components/subresource_filter/core/browser/subresource_filter_constants.h"
@@ -251,7 +254,12 @@ void RulesetService::IndexAndStoreAndPublishRulesetIfNeeded(
   if (most_recently_indexed_version.IsCurrentFormatVersion() &&
       most_recently_indexed_version.content_version ==
           unindexed_ruleset_info.content_version) {
+#if BUILDFLAG(IS_ANDROID)
+    if (!subresource_filter::IsInitializedFromConfig())
+      return;
+#else
     return;
+#endif // BUILDFLAG(IS_ANDROID)
   }
 
   // Before initialization, retain information about the most recently supplied
@@ -477,6 +485,9 @@ void RulesetService::OnWrittenRuleset(WriteRulesetCallback result_callback,
   }
   version.SaveToPrefs(local_state_);
   std::move(result_callback).Run(version);
+#if BUILDFLAG(IS_ANDROID)
+  subresource_filter::DeleteUnindexedFile();
+#endif // BUILDFLAG(IS_ANDROID)
 }
 
 void RulesetService::OpenAndPublishRuleset(
